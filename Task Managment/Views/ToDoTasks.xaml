<Page x:Class="Task_Managment.Views.ToDoTasks"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:uc="clr-namespace:Task_Managment.UserControls"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:viewmodels="clr-namespace:Task_Managment.ViewModels"
      xmlns:c="clr-namespace:Task_Managment.ViewModel.Converters"
      xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      d:DataContext="{d:DesignInstance Type=viewmodels:TasksViewModel}"
      DataContext="{StaticResource TasksViewModelVM}"
      x:Name="toDoPage"
      mc:Ignorable="d"
      d:DesignHeight="450"
      d:DesignWidth="800"
      Title="ToDoTasks">

    <Page.Resources>

        <c:BooltoVis x:Key="BooltoVis" />
        <c:BooltoVisOpposite x:Key="BooltoVisOpposite" />
        <c:BooltoVisSubtasksPane x:Key="BooltoVisSubtasks" />

        <Style x:Key="CheckToggleButton"
               TargetType="{x:Type ToggleButton}"
               BasedOn="{StaticResource MaterialDesignFlatToggleButton}">
            <Setter Property="BorderThickness"
                    Value="100" />
            <Setter Property="Background"
                    Value="Cornsilk">

            </Setter>

        </Style>

        <Style x:Key="MyToggleButton"
               TargetType="{x:Type ToggleButton}"
               BasedOn="{StaticResource MaterialDesignActionToggleButton}">
            <Setter Property="BorderThickness"
                    Value="100" />
            <Setter Property="Background"
                    Value="{StaticResource YellowBrush}">
            </Setter>


        </Style>

        <Style x:Key="CheckBoxStyle1"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent"
                                         SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Border Background="#FFAEB3B9"
                                        BorderThickness="2"
                                        CornerRadius="10">
                                    <Microsoft_Windows_Themes:BulletChrome IsChecked="{TemplateBinding IsChecked}"
                                                                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                           RenderPressed="{TemplateBinding IsPressed}" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <DockPanel LastChildFill="True">


        <!--Tasklist Panel-->

        <Grid DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="211*" />
                <RowDefinition Height="371*" />
            </Grid.RowDefinitions>
            <StackPanel Width="230"
                        HorizontalAlignment="Center"
                        Background="#FFFFFF"
                        Grid.RowSpan="2">

                <TextBlock Text="Tasks To Do"
                           FontSize="13"
                           Margin="15,9,5,0"
                           Foreground="Black" />

                <TextBlock Text="Task lists"
                           FontSize="18"
                           Foreground="Black"
                           Margin="20,20,5,0" />

                <!--Task List-->
                <ListView Margin="25,5,10,5"
                          ItemsSource="{Binding TasklistList}"
                          Style="{Binding Source={StaticResource myListviewStyle}}"
                          SelectedItem="{Binding SelectedTasklist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <ListView.ItemTemplate>

                        <DataTemplate>
                            <Grid Margin="0,4,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0"
                                      HorizontalAlignment="Left"
                                      Margin="0,0,10,0">
                                    <Image Grid.Column="0"
                                           Width="18"
                                           Height="18"
                                           Margin="10,0,0,0"
                                           Source="{Binding Path=IconSource}" />
                                </Grid>

                                <Grid Grid.Column="1"
                                      HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Style="{Binding Source={StaticResource myTextblockStyle}}"
                                               Visibility="{Binding Source={StaticResource TasksViewModelVM}, Path=IsTasklistRenaming, 
                                                                    Converter={StaticResource BooltoVisOpposite}}" />

                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource myRenamingTextboxStyle}"
                                             Visibility="{Binding Source={StaticResource TasksViewModelVM}, Path=IsTasklistRenaming, 
                                                                  Converter={StaticResource BooltoVis}}" />
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="LostFocus">
                                            <b:InvokeCommandAction Command="{Binding Source={StaticResource TasksViewModelVM}, Path=EndRenameCommand}"
                                                                   CommandParameter="{Binding Source={StaticResource TasksViewModelVM}, Path=SelectedTasklist}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>

                                    <Grid.ContextMenu>
                                        <ContextMenu DataContext="{StaticResource TasksViewModelVM}">
                                            <MenuItem Header="Rename list"
                                                      Command="{Binding StartRenameCommand}"
                                                      CommandParameter="{Binding SelectedTasklist}" />
                                            <MenuItem Header="Duplicate list" />
                                            <Separator />
                                            <MenuItem Header="Delete list"
                                                      Command="{Binding DeleteCommand}"
                                                      CommandParameter="{Binding SelectedTasklist}" />
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                </Grid>

                                <TextBlock Grid.Column="2"
                                           Style="{Binding Source={StaticResource myTextblockStyle}}"
                                           Foreground="DimGray"
                                           Margin="0,4,5,0"
                                           Text="{Binding TotalCount}" />

                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button Style="{StaticResource myButtonStyle}"
                        Content="+New list"
                        Margin="26,5,5,5"
                        Foreground="Black"
                        Command="{Binding NewTasklistCommand}" />

            </StackPanel>
        </Grid>



        <DockPanel LastChildFill="True">
            <DockPanel.Background>
                <ImageBrush x:Name="img_bg"
                            ImageSource="/imagesForWpf/img3_background.png"
                            Stretch="Fill" />
            </DockPanel.Background>



            <!--Add a task -->
            <StackPanel Background="Transparent"
                        DockPanel.Dock="Bottom">
                <Grid>
                    <TextBox Style="{StaticResource myTextBoxPromptStyle}"
                             Text=" + Add a task"
                             Foreground="Black"
                             Focusable="False" />

                    <TextBox Style="{StaticResource myTextBoxStyle}"
                             AcceptsReturn="False"
                             Foreground="Black"
                             Text="{Binding AddaTaskText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return"
                                        Command="{Binding NewTaskCommand}"
                                        CommandParameter="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                        </TextBox.InputBindings>
                    </TextBox>
                </Grid>
            </StackPanel>


            <StackPanel>
                <!--Task Title -->
                <StackPanel Orientation="Horizontal"
                            Margin="0,20,5,5"
                            DockPanel.Dock="Top">
                    <Image Source="{Binding SelectedTasklist.IconSource}"
                           Width="25"
                           Height="25"
                           Margin="0,3,14,0" />
                    <Grid Width="Auto">
                        <Border Background="Transparent"
                                BorderThickness="2"
                                CornerRadius="10">

                        </Border>


                        <TextBlock Text="{Binding SelectedTasklist.Name}"
                                   Foreground="#EEEEEE"
                                   FontSize="26"
                                   FontWeight="DemiBold"
                                   Margin="0,0,0,0" />
                    </Grid>

                </StackPanel>

                <!--Black separating border-->
                <StackPanel Orientation="Horizontal"
                            DockPanel.Dock="Right">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                               Margin="0,0,0,0"
                               Width="0.5"
                               Background="Black"
                               Visibility="{Binding SubtasksPaneVisible, Converter={StaticResource BooltoVisSubtasks},
                                                                 Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>


                <!--Subtasks showlist-->
                <ListView x:Name="toDoList"
                          Margin="30,0,35,0"
                          HorizontalContentAlignment="Stretch"
                          ItemsSource="{Binding TasksList}"
                          Style="{Binding Source={StaticResource myListviewStyle}}"
                          SelectedItem="{Binding SelectedTask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <ListView.ItemTemplate>

                        <DataTemplate>
                            <Border Background="#CEEAE8E4"
                                    BorderThickness="2"
                                    CornerRadius="10"
                                    HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="40" />
                                    </Grid.ColumnDefinitions>

                                    <!--Grey Circle-->
                                    <Button Grid.Column="0"
                                            Width="20"
                                            Height="20"
                                            x:Name="Datatemplate"
                                            Margin="0,0,7,0"
                                            Visibility="Visible"
                                            Background="Transparent"
                                            Command="{Binding Source={StaticResource TasksViewModelVM}, Path=DeleteCommand}"
                                            CommandParameter="{Binding Source={StaticResource TasksViewModelVM}, Path=SelectedTask}"
                                            Style="{Binding Source={StaticResource MaterialDesignFloatingActionMiniDarkButton}}">

                                        <Image>
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Cursor"
                                                            Value="Hand" />
                                                    <Setter Property="Image.Source"
                                                            Value="\imagesForWpf\circle.png" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver"
                                                                 Value="True">
                                                            <Setter Property="Image.Source"
                                                                    Value="\imagesForWpf\Done.png">
                                                            </Setter>
                                                            <Setter Property="FocusManager.FocusedElement"
                                                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"></Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>

                                    </Button>

                                    <TextBlock Grid.Column="1"
                                               Text="{Binding Name}"
                                               Margin="0,10,10,10"
                                               Width="Auto"
                                               HorizontalAlignment="Stretch"
                                               Style="{Binding Source={StaticResource myTextblockStyle}}" />

                                    <!--Grey star-->
                                    <Grid Grid.Column="2"
                                          Width="17"
                                          Height="17"
                                          Margin="0,0,7,0">
                                        <Button Background="Transparent"
                                                Command="{Binding Source={StaticResource TasksViewModelVM}, Path=MarkImportantCommand}"
                                                CommandParameter="{Binding Name}"
                                                Style="{Binding Source={StaticResource myGreyStarButton}}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                
                                                <Image Grid.Column="0"
                                                       Style="{Binding Source={StaticResource myButtonImageStyle}}"
                                                       Visibility="{Binding Important, Converter={StaticResource BooltoVisOpposite}}"
                                                       Source=" /imagesForWpf/lowerstar.png">
                                                </Image>
                                                
                                                <Image Grid.Column="0"
                                                       Style="{Binding Source={StaticResource myButtonImageStyle}}"
                                                       Visibility="{Binding Important, Converter={StaticResource BooltoVis}}"
                                                       Source="/imagesForWpf/star.png" />
                                            </Grid>
                                        </Button>
                                    </Grid> 

                                    <Grid.ContextMenu>
                                        <ContextMenu DataContext="{StaticResource TasksViewModelVM}">
                                            <MenuItem Header="Add to My Day" />
                                            <Separator />
                                            <MenuItem Header="Mark as Important"
                                                      Command="{Binding MarkImportantCommand}"
                                                      CommandParameter="{Binding SelectedTask.Name}" />

                                            <MenuItem Header="Mark as Completed"
                                                      Command="{Binding DeleteCommand}"
                                                      CommandParameter="{Binding SelectedTask}" />

                                            <Separator />
                                            <MenuItem Header="Delete Task"
                                                      Command="{Binding DeleteCommand}"
                                                      CommandParameter="{Binding SelectedTask}" />
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>

                <!--Black separating border-->
                <StackPanel Orientation="Horizontal"
                            DockPanel.Dock="Right">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                               Margin="0,0,0,0"
                               Width="0.5"
                               Background="Black"
                               Visibility="{Binding SubtasksPaneVisible, Converter={StaticResource BooltoVisSubtasks},
                                                                 Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

            </StackPanel>
        </DockPanel>





    </DockPanel>
</Page>
